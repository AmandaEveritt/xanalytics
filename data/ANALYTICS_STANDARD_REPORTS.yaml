#-----------------------------------------------------------------------------
# enrollment by date for course
#
- "author": |-
    None
  "date": |-
    2015-02-11 22:51:43.261547
  "depends_on": |-
    ["{person_course}"]
  "description": "Cumulative enrollment by date, from SQL records (updated weekly).\
    \  \r\nUsers can un-enroll; this is included in the \"Net registered\" line, but\
    \ not in \"Ever registered\"."
  "group_tags":
  - !!python/unicode |-
    course
  "html": |-
    <div id="contain-{{report_name}}" style="min-width: 310px; margin: 0 auto">
                                   <img src="/images/loading_icon.gif"/>
    </div>
  "icon": |-
    None
  "javascript": |-
    parameters = {{parameters}};
    parameters.get_table_columns = true;

    $.getJSON(
        '/custom/get_report_data/{{report_name}}',
        parameters,

        function(data) {

            html = '<table id="table-{{report_name}}" class="display" width="100%"></table>';
            html += '<div id="plot-{{report_name}}"></div>';
            if (data.error){
                html = "Error!  " + data.error;
            }
            $('#contain-{{report_name}}').html(html);
            if (data.error){ return; }

            if (0){
                var table = $('#table-{{report_name}}').DataTable({
                    dom: 'T<"clear">lfrtip',
                    "columns": data['tablecolumns'],
                    "pageLength": 10,
                    searching: true,
                    ordering: true,
                    data: data['data'],
                });
            }

            // create data series
            var nvac = [];
            var nvec = [];
            var daily_ever = [];
            var daily_net = [];
            var xaxis_data = [];
            var total_net = 0;
            var total_ever = 0;
            var series = [{name: 'Ever Registered', yAxis: 1, data: nvec},
                          {name: 'Net Registered', yAxis: 1, data: nvac},
                          {name: 'Ever Reg daily', type: 'column', data: daily_ever},
                          // {name: 'Net Reg daily', type: 'column', data: daily_net}
                         ];
            data['data'].forEach(function(x){
                        var date = $.datepicker.parseDate('yy-mm-dd', x.date).getTime();
                        var nnet = Number(x.nregistered_net);
                var n_ever = Number(x.nregistered_ever);
                        total_net += nnet;
                        total_ever += n_ever;
                    xaxis_data.push(date);

                nvac.push( [date, total_net] );
                        nvec.push( [date, total_ever] );
                daily_ever.push( [date, n_ever] );
                daily_net.push( [date, nnet] );
            });

            // plot data
            $('#plot-{{report_name}}').highcharts({
                chart: {  zoomType: 'xy'  },
                credits: {  enabled: false  },
                title : {  text : 'Enrollment by date for ' + parameters.course_id,  },
                subtitle: { text: "Source: SQL" },
                xAxis: [ { type: 'datetime',
                       // categories: xaxis_data,
                     } ],
                yAxis: [ {    labels: { style: { color: Highcharts.getOptions().colors[2] } },
                              title: { text: 'Daily Enrollment', style: { color: Highcharts.getOptions().colors[2] } },
                              opposite: true,
                            // min: 0,
                              },
                       { gridLineWidth: 0,
                         title: { text: 'Cumulative Enrollment', style: { color: Highcharts.getOptions().colors[0] } },
                         labels: {style: { color: Highcharts.getOptions().colors[0] }  },
                    // min: 0,
                       },
                       ],
                series : series,
            });

        } );
  "meta_info": {}
  "name": |-
    enrollment-by-day-for-course-from-sql
  "sql": |-
    SELECT course_id,
                     date,
                     SUM(registered) as nregistered_ever,
                     SUM(un_registered) as n_unregistered,
                     -SUM(un_registered) + nregistered_ever as nregistered_net,
                     SUM(nregistered_ever) over (partition by course_id order by date) as nregistered_ever_cum,
                     SUM(nregistered_net) over (partition by course_id order by date) as nregistered_net_cum,

                     SUM(verified) as nverified_ever,
                     SUM(verified_un_registered) as nverified_un_registered,
                     -SUM(verified_un_registered) + nverified_ever as nverified_net,
                     SUM(nverified_ever) over (partition by course_id order by date) as nverified_ever_cum,
                     SUM(nverified_net) over (partition by course_id order by date) as nverified_net_cum,

                   FROM (
                       SELECT
                         course_id,
                         date(last_event) as date,
                         INTEGER(0) as registered,
                         INTEGER(count(*)) un_registered,
                         INTEGER(0) as verified,
                         INTEGER(sum(case when mode = "verified" then 1 else 0 end)) as verified_un_registered,
                       FROM {person_course}
                       where is_active = 0
                       and  last_event is not null
                       and ((forumRoles_isStudent = 1) or (forumRoles_isStudent is null))
                       group by date, course_id
                       order by date, course_id
                     ),(
                       SELECT
                         course_id,
                         date(start_time) as date,
                         INTEGER(count(*)) registered,
                         INTEGER(0) as un_registered,
                         INTEGER(sum(case when mode = "verified" then 1 else 0 end)) as verified,
                         INTEGER(0) as verified_un_registered,
                       FROM {person_course}
                       where start_time is not null
                       and ((forumRoles_isStudent = 1) or (forumRoles_isStudent is null))
                       group by date, course_id
                       order by date, course_id
                     )
                   group by date, course_id
                   order by date, course_id;
  "table_name": |-
    stats_enrollment_sql
  "title": |-
    Enrollment by day for course
#
#-----------------------------------------------------------------------------
# ID Verified Registrants by date
#
- "author": |-
    None
  "date": |-
    2015-02-01 02:12:24.177493
  "depends_on": |-
    [ "{dataset}.user_info_combo" ]
  "description": |-
    ID Verified Registrants -- Enrollment by Date
  "group_tags":
  - !!python/unicode |-
    course
  "html": |-
    <div id="contain-{{report_name}}" style="min-width: 310px; margin: 0 auto">
                                   <img src="/images/loading_icon.gif"/>
    </div>
  "icon": |-
    None
  "javascript": |
    parameters = {{parameters}};
    parameters.get_table_columns = true;

    $.getJSON(
        '/custom/get_report_data/{{report_name}}',
        parameters,

        function(data) {

            html = '<table id="table-{{report_name}}" class="display" width="100%"></table>';
            html += '<div id="plot-{{report_name}}"></div>';
            if (data.error){
                html = "Error!  " + data.error;
            }
            $('#contain-{{report_name}}').html(html);
            if (data.error){ return; }

            // make data table
        if (0){
            var table = $('#table-{{report_name}}').DataTable({
                dom: 'T<"clear">lfrtip',
                "columns": data['tablecolumns'],
                "pageLength": 10,
                searching: true,
                ordering: true,
                data: data['data'],
            });
        }

            // create data series
        var nvac = [];
        var nvec = []
            var series = [{name: 'idV ever enrolled', data: nvec},
                      {name: 'idV active', data: nvac},
                     ];
            data['data'].forEach(function(x){
            date = $.datepicker.parseDate('yy-mm-dd', x.date).getTime();
            nvac.push([ date, Number(x.nverified_active_cum) ]);
            nvec.push([ date, Number(x.nverified_ever_cum) ]);
            });

            // plot data
            $('#plot-{{report_name}}').highcharts('StockChart', {

                rangeSelector : {
                    selected : 4
                },
                credits: {  enabled: false  },
                title : {
                    text : 'ID Verified Registrants -- Enrollment by Date for ' + parameters.course_id,
                },

                series : series,
            });

        } );
  "meta_info": {}
  "name": |-
    IDV_enrollment_by_course
  "sql": |-
    SELECT
        date,
        #nverified_active as nverified_active_day,
        #nverified_ever as nverified_ever_day,
        sum(nverified_active) over (order by date) as nverified_active_cum,
        sum(nverified_ever) over (order by date) as nverified_ever_cum,
    FROM (
      SELECT
        date(enrollment_created) as date,
        sum(case when enrollment_is_active=1 then 1 else 0 end) as nverified_active,
        count(*) as nverified_ever,
      FROM [{dataset}.user_info_combo]
      where
        enrollment_mode = "verified"
      group by date
      order by date
    )
    order by date
  "table_name": |-
    IDV_enrollment
  "title": |-
    ID Verified Registrants
#
#-----------------------------------------------------------------------------
# cross-course enrollment
#
- "author": |-
    None
  "date": |-
    2015-02-07 21:44:59.802225
  "depends_on": |-
    None
  "description": |-
    Cross-Course Enrollment Comparison
  "group_tags":
  - !!python/unicode |-
    role:pm
  "html": |-
    <div id="contain-{{report_name}}" style="min-width: 310px; margin: 0 auto">
                                   <img src="/images/loading_icon.gif"/>
    </div>
  "icon": |-
    None
  "javascript": |-
    var cc_all_enrollment_plot = function(){
        // stacked horizontal bar chart, each row one course
        var data = cc_data['data'];
        $('#cc_enrollment').highcharts({
            chart: { type: 'bar',  zoomType: 'x' },
            credits: {  enabled: false  },
            yAxis: {min: 0},
            title : { text : 'Number of registrants by course', },
            subtitle: { text: '(click and drag to zoom)' },
            xAxis: { categories: data['enrollment_courses'] },
            yAxis: {  min: 0,   title: { text: 'Registrants' } },
            legend: {
                reversed: true
            },
            plotOptions: {
                series: {
                    stacking: 'normal'
                }
            },
            // tooltip: { pointFormat: 'Registrants: <b>{point.y:.1f}</b>' },
            series : data['all_enrollment_series'],
        });
    }

    $.getJSON('/dashboard/get/broad_stats', function (data) {

            var cchtml = '<h3>Enrollment and certification statistics</h3>';
            cchtml += '<div id="cc_enrollment"  style="min-width: 310px; max-width: 800px; height: 1400px; margin: 0 auto"></div><p></p>';
            cchtml += '<div id="cc_certified"></div><p></p>';
            cchtml += '<div id="cc_verified"></div><p></p>';
            cchtml += '<table id="cc_data"></table><p></p>';
            cchtml += '<br style="clear:both;"/>';

            $('#contain-{{report_name}}').html(cchtml);

            // console.log('tabledata=', data['table']);
            // console.log('tablecolumns=', data['tablecolumns']);

            cc_data['data'] = data;


            cc_all_enrollment_plot();
    //      cc_enrollment_plot();
    //      cc_certified_plot();
    //      cc_verified_plot();

            var cc_table = $('#cc_data').DataTable({
                dom: 'T<"clear">lfrtip',
                "paging":   true,
                "ordering": true,
                "info":     true,
                "searching":    true,
                "order": [ 1, 'desc' ],
                "data": data['table'],
                // scrollY:        "300px",
                scrollY:        false,
                scrollX:        true,
                scrollCollapse: true,
                // paging:         false
                // "columns" : data['tablecolumns'],
                'columns': [{"title": "course_id", "class": "dt-center", "data": "course_id"},
                            {"title": "registered_sum", "class": "dt-center", "data": "registered_sum"},
                            {"title": "viewed_sum", "class": "dt-center", "data": "viewed_sum"},
                            {"title": "explored_sum", "class": "dt-center", "data": "explored_sum"},
                            {"title": "certified_sum", "class": "dt-center", "data": "certified_sum"},
                            {"title": "n_male", "class": "dt-center", "data": "n_male"},
                            {"title": "n_female", "class": "dt-center", "data": "n_female"},
                            {"title": "n_verified_id", "class": "dt-center", "data": "n_verified_id"},
                            {"title": "verified_viewed", "class": "dt-center", "data": "verified_viewed"},
                            {"title": "verified_explored", "class": "dt-center", "data": "verified_explored"},
                            {"title": "verified_certified", "class": "dt-center", "data": "verified_certified"},
                            {"title": "verified_avg_grade", "class": "dt-center", "data": "verified_avg_grade"},
                            {"title": "verified_n_male", "class": "dt-center", "data": "verified_n_male"},
                            {"title": "verified_n_female", "class": "dt-center", "data": "verified_n_female"},
                           ],
            });
            new $.fn.dataTable.FixedColumns( cc_table );

        });
  "meta_info": {}
  "name": |-
    cross-course-enrollment-comparison
  "sql": |-
    None
  "table_name": |-
    None
  "title": |-
    Cross Course Enrollment Comparison
#
#-----------------------------------------------------------------------------
# cross-course forum usage
#
- "author": |-
    None
  "date": |-
    2015-02-07 23:30:20.200959
  "depends_on": |-
    None
  "description": |-
    Comparison of total number of forum posts across courses
  "group_tags":
  - !!python/unicode |-
    role:pm
  "html": |-
    <div id="contain-{{report_name}}" style="min-width: 310px; margin: 0 auto">
                                   <img src="/images/loading_icon.gif"/>
    </div>
  "icon": |-
    None
  "javascript": |-
    var cc_data = {}

    var cc_forum_show = function(){

        var ccfhtml = '<h3>Forum and Navigation events stats</h3>';
        ccfhtml += '<div id="cc_forum_plot" style="min-width: 310px; max-width: 800px; height: 1400px; margin: 0 auto" ></div>';
        ccfhtml += '<table id="cc_forum_table"></table>';
        $('#cc_forum').html(ccfhtml);

        var data = cc_data['data'];

            fpdata = [];
        data['table'].forEach(function(x){
            fpdata.push({'course_id': x.course_id, 'nfp': Number(x.nforum_posts_sum) });
        });
        fpdata.sort(function(a,b){ return b.nfp - a.nfp });

        var nfp = [];
        var series = [ {'name': '# forum posts', data: nfp }];
        var courses = [];
        fpdata.forEach(function(x){
                    nfp.push( x.nfp );
                    courses.push(x.course_id);
        });

        $('#cc_forum_plot').highcharts({
            chart: { type: 'bar',  zoomType: 'x' },
            credits: {  enabled: false  },
            yAxis: {min: 0},
            title : { text : 'Number of forum posts by course', },
            subtitle: { text: '(click and drag to zoom)' },
            xAxis: { categories: courses },
            yAxis: {  min: 0,   title: { text: '# forum posts' } },
            legend: {
                reversed: true
            },
            plotOptions: {
                series: {
                    stacking: 'normal'
                }
            },
            // tooltip: { pointFormat: 'Registrants: <b>{point.y:.1f}</b>' },
            series : series,
        });

        var cc_forum_table = $('#cc_forum_table').DataTable({
            dom: 'T<"clear">lfrtip',
            "paging":   true,
            "ordering": true,
            "info":     true,
            "searching":    true,
            "order": [ 1, 'desc' ],
            "data": data['table'],
            scrollY:        false,
            scrollX:        true,
            scrollCollapse: true,
            // "columns" : data['tablecolumns'],
            'columns': [{"title": "course_id", "class": "dt-center", "data": "course_id"},
                        {"title": "nforum_posts_sum", "class": "dt-center", "data": "nforum_posts_sum"},
                        {"title": "min_gade_certified", "class": "dt-center", "data": "min_gade_certified"},
                        {"title": "nforum_votes_sum", "class": "dt-center", "data": "nforum_votes_sum"},
                        {"title": "nforum_endorsed_sum", "class": "dt-center", "data": "nforum_endorsed_sum"},
                        {"title": "nforum_threads_sum", "class": "dt-center", "data": "nforum_threads_sum"},
                        {"title": "nforum_commments_sum", "class": "dt-center", "data": "nforum_commments_sum"},
                        {"title": "nforum_pinned_sum", "class": "dt-center", "data": "nforum_pinned_sum"},
                        {"title": "nprogcheck_avg", "class": "dt-center", "data": "nprogcheck_avg"},
                        {"title": "certified_nprogcheck", "class": "dt-center", "data": "certified_nprogcheck"},
                        {"title": "verified_nprogcheck", "class": "dt-center", "data": "verified_nprogcheck"},
                        {"title": "nshow_answer_sum", "class": "dt-center", "data": "nshow_answer_sum"},
                        {"title": "nseq_goto_sum", "class": "dt-center", "data": "nseq_goto_sum"},
                       ],
        });
        new $.fn.dataTable.FixedColumns( cc_forum_table );
    };

    $.getJSON('/dashboard/get/broad_stats', function (data) {

        var cchtml = '';
        cchtml += '  <div id="cc_forum"></div>';
        cchtml += '<br style="clear:both;"/>';

        $('#contain-{{report_name}}').html(cchtml);

        // console.log('tabledata=', data['table']);
        // console.log('tablecolumns=', data['tablecolumns']);

        cc_data['data'] = data;

        cc_forum_show();

        //  cc_all_enrollment_plot();
        //  cc_enrollment_plot();
        //  cc_certified_plot();
        //  cc_verified_plot();

     });
  "meta_info": {}
  "name": |-
    cross-course-forum-usage-comparison
  "sql": ""
  "table_name": |-
    None
  "title": |-
    Cross Course Forum Usage Comparison
#
#-----------------------------------------------------------------------------
# 
#
